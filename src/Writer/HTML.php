<?php
namespace UmutPHP\WPVulnerabilityCheck\Writer;

class HTML extends Writer
{
    private $output = '';
    /**
     * Echo line with end of line
     * 
     * @param string $output
     */
    public function writeLine($output = "") {
        $this->write($output);
        echo PHP_EOL;
    }

    /**
     * Echo line
     * 
     * @param string $output
     */
    public function write($output = "") {
        echo $output;
    }

    /**
     * Echo result line
     * 
     * @param string $plugin
     * @param array $result
     */
    public function writeResult($plugin, $result) {
        $this->output .= "<h2>$plugin</h2>" . '<div class="container-fluid">';
        $j = 1;
        foreach ($result as $key => $vuln) {
            $this->output .= '<div class="row"><div class="col-md-10">';
            $this->output .= '<h4>' . $vuln["title"] . ' <span class="label label-default">' . $vuln["id"] .
                '</span> <span class="label label-danger">' . $vuln["vuln_type"] . '</span></h4>';
            if ($vuln["fixed_in"]) {
                $this->output .= "<p>Fixed in Version " . $vuln["fixed_in"] . "</p>";
            } else {
                $this->output .= '<p class="text-danger">No known fix</p>';
            }
            $this->output .= "<p><h5>References;</h5>";

            foreach ($vuln["references"] as $key1 => $values) {
                foreach ($values as $key2 => $value) {
                    if ($key1 == 'url') {
                        $this->output .=  'Url: <a href="' . $value . '" target="_blank">' . $value . '</a></br>';
                    } else {
                        $this->output .= "$key1: $value</br>";
                    }
                }
            }
            $this->output .=  "</p>";
            $j++;
            $this->output .= '</div></div>';
        }

        $this->output .= '</div>';
    }

    public function __destruct() {
        $this->writeLine();
        $this->writeLine();
        $this->writeLine("HTML report is generated: vulnerability_result.html");
        $this->writeLine();
        file_put_contents(
            "vulnerability_result.html",
            $this->fileHeader() .
            $this->fileBody($this->output) .
            $this->fileFooter()
        );
    }

    private function fileHeader() {
        return '
            <!doctype html>
            <html lang="en">
              <head>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
                <meta name="description" content="">
                <meta name="author" content="">
                <title>Vulnerability Details</title>
                <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
                <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
              </head>
        ';
    }

    private function fileBody($result) {
        return '
            <body>
                <div class="container">
                  <h1>Vulnerability Details</h1>
                  <p class="lead">List of plugins and vulnerabilities;</p>
                  ' . 
                  $result .
                  '
                </div>
            </body>
        ';
    }

    private function fileFooter() {
        return '
            </html>
        ';
    }
}
